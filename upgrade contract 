// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract RoachToken {
    string public name;
    string public symbol;
    uint256 public totalSupply;
    mapping(address => uint256) public balanceOf;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor() {
        name = "Roach Token";
        symbol = "RCT";
        totalSupply = 3_600_000_000 * 10 ** 18;
        balanceOf[msg.sender] = totalSupply;
    }

    function transfer(address to, uint256 value) external returns (bool) {
        require(balanceOf[msg.sender] >= value, "Insufficient balance");
        
        uint256 gasFee = 5 * 10 ** 18; // $5 gas fee in wei
        require(balanceOf[msg.sender] - value >= gasFee, "Not enough balance to cover gas fee");
        
        balanceOf[msg.sender] -= (value + gasFee);
        balanceOf[to] += value;
        
        emit Transfer(msg.sender, to, value);
        return true;
    }
}
